#include <stdio.h>

#define MAX 5

int DQ[MAX];
int L=-1,R=-1;

void insert_DQ_left(int ele)
{
    if(L==(R+1)%MAX)
    {
        printf("Overflow");
        return;
    }
    if(L==-1)
    {
        L=0;
        R=0;
    }
    else if(L==0)
    {
        L=MAX-1;
    }
    else
    {
        L=L-1;
    }
    DQ[L]=ele;
}
void insert_DQ_right(int ele)
{
    if(L==(R+1)%MAX)
    {
        printf("Overflow");
        return;
    }
    if(L==-1)
    {
        L=0;
        R=0;
    }
    else if(R==MAX-1)
    {
        R=0;
    }
    else
    {
        R=R+1;
    }
    DQ[R]=ele;
}
void delete_DQ_left()
{
    if(L==-1)
    {
        printf("Queue is empty");
        return;
    }
    if(L==R)
    {
        L=-1;
        R=-1;
    }
    else if(L==MAX-1)
    {
        L=0;
    }
    else
    {
        L=L+1;
    }
}
void delete_DQ_right()
{
    if(R==-1)
    {
        printf("Queue is empty");
        return;
    }
    if(R==L)
    {
        L=-1;
        R=-1;
    }
    else if(R==0)
    {
        R=MAX-1;
    }
    else
    {
        R=R+1;
    }
}
void traverse()
{
    if(L<=R)
    {
        for(int i=L;i<=R;i++)
        {
            printf("%d ",DQ[i]);
        }
    }
    else
    {
        for(int i=L;i<=MAX-1;i++)
        {
            printf("%d ",DQ[i]);
        }
        for(int j=0;j<=R;j++)
        {
            printf("%d ",DQ[j]);
        }
    }
}
int main()
{
    insert_DQ_left(1);
    insert_DQ_left(2);
    insert_DQ_right(6);
    insert_DQ_right(7);
    insert_DQ_left(3);
    printf("traverse after insertion:\n");
    traverse();
    delete_DQ_left();
     printf("\ntraverse after deletion:\n");
    traverse();
    return 0;
}
