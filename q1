#include <stdio.h>
#include<stdlib.h>
struct node
{
 int pr;
 int ele;
 struct node*next;
};
struct node*front=NULL;
void insert_pq(int p,int v)
{
 struct node * newnode=(struct node*)malloc(sizeof(struct node));
 newnode->pr=p;
 newnode->ele=v;
 newnode->next=NULL;
 if(front==NULL)
 {
  front=newnode;
 }
 else if((front!=NULL)&&(front->pr>newnode->pr))
 {
  newnode->next=front;
  front=newnode;
 }
 else
 {
  struct node * prev=NULL;
  struct node * temp=front;
  while((temp->next!=NULL)&&(temp->pr<p))
  {
   prev=temp;
   temp=temp->next;
  }
  if((temp->next==NULL)&&(temp->pr<p))
  {
   temp->next=newnode;   
  }
  else
  {
   prev->next=newnode;
   newnode->next=temp;
  }
 }
}

void deletion_pq()
{
 struct node*temp;
 temp=front;
 if(front==NULL)
 {
  printf("underflow condition");
 }
 else
 {
  front=front->next;
  free(temp);
 }
}
void traverse()
{
 struct node*ptr;
 ptr=front;
 
 while(ptr!=NULL)
 {
  printf("%d",ptr->ele);
  ptr=ptr->next;
 }
}
int main()
{
 insert_pq(2,4);
 insert_pq(4,1);
 insert_pq(5,5);
 printf("TRAVERSING after insertion:\n");
 traverse();
 deletion_pq();
 printf("\n");
 printf("TRAVERSING after deletion:\n");
 traverse();
 insert_pq(1,3);
 printf("\n");
 printf("TRAVERSING after one more insertion:\n");
 traverse();
 return 0;
}
